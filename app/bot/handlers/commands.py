from aiogram import Router
from aiogram.filters import Command, CommandStart
from aiogram.types import Message
from aiogram_dialog import DialogManager, StartMode
import logging

from app.bot.states.start import StartSG

router = Router()
logger = logging.getLogger(__name__)


@router.message(CommandStart())
async def start_command(message: Message, dialog_manager: DialogManager):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await dialog_manager.start(StartSG.welcome, mode=StartMode.RESET_STACK)


@router.message(Command("menu"))
async def menu_command(message: Message, dialog_manager: DialogManager):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /menu"""
    from app.bot.states.main_menu import MainMenuSG
    await dialog_manager.start(MainMenuSG.main_menu, mode=StartMode.RESET_STACK)


@router.message(Command("help"))
async def help_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = (
        "ü§ñ <b>–ë–æ—Ç –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ –ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç –ë—É–¥—É—â–µ–≥–æ 2025</b>\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/menu - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n"
        "–§—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞:\n"
        "üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π\n"
        "üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ —Å–µ—Å—Å–∏–∏\n"
        "üó∫ –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –ø–ª–æ—â–∞–¥–∫–µ\n"
        "‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã\n"
    )
    await message.answer(help_text, parse_mode="HTML")


@router.message(Command("test_error"))
async def test_error_command(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ERROR —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω–∞–º"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
    from config.config import load_config
    config = load_config()
    
    if message.from_user.id not in config.logging.admin_ids:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
        return
    
    logger.error(f"–¢–µ—Å—Ç–æ–≤–∞—è –æ—à–∏–±–∫–∞ –æ—Ç –∞–¥–º–∏–Ω–∞ {message.from_user.id}")
    await message.answer("‚úÖ ERROR —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")


@router.message(Command("test_warning"))
async def test_warning_command(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è WARNING —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω–∞–º"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
    from config.config import load_config
    config = load_config()
    
    if message.from_user.id not in config.logging.admin_ids:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
        return
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º 6 WARNING –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Ä–æ–≥–∞
    for i in range(6):
        logger.warning(f"–¢–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ #{i+1} –æ—Ç –∞–¥–º–∏–Ω–∞ {message.from_user.id}")
    
    await message.answer("‚úÖ 6 WARNING –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (–¥–æ–ª–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ)")


@router.message(Command("test_critical"))
async def test_critical_command(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è CRITICAL —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω–∞–º"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
    from config.config import load_config
    config = load_config()
    
    if message.from_user.id not in config.logging.admin_ids:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
        return
    
    logger.critical(f"–¢–µ—Å—Ç–æ–≤–∞—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –æ—Ç –∞–¥–º–∏–Ω–∞ {message.from_user.id}")
    await message.answer("‚úÖ CRITICAL —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")


@router.message(Command("test_exception"))
async def test_exception_command(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–π"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
    from config.config import load_config
    config = load_config()
    
    if message.from_user.id not in config.logging.admin_ids:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
        return
    
    await message.answer("üß™ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...")
    # –≠—Ç–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø–æ–π–º–∞–Ω–æ middleware –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∞–º
    raise RuntimeError(f"–¢–µ—Å—Ç–æ–≤–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∞ {message.from_user.id}")
