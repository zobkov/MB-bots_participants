import os
import gspread
from google.oauth2.service_account import Credentials
from googleapiclient.discovery import build
from googleapiclient.http import MediaFileUpload
from typing import Optional, Dict, Any, List
import logging

logger = logging.getLogger(__name__)


class GoogleServicesManager:
    """–ö–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Google Sheets –∏ Google Drive"""
    
    def __init__(self, credentials_path: str, spreadsheet_id: str, drive_folder_id: str = "", 
                 spreadsheet_name: str = "–ó–∞—è–≤–∫–∏ –ö–ë–ö26", drive_folder_name: str = "–†–µ–∑—é–º–µ_–ö–ë–ö26",
                 enable_drive: bool = False):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ Google —Å–µ—Ä–≤–∏—Å–æ–≤
        
        Args:
            credentials_path: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
            spreadsheet_id: ID Google –¢–∞–±–ª–∏—Ü—ã
            drive_folder_id: ID –ø–∞–ø–∫–∏ –Ω–∞ Google Drive –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
            spreadsheet_name: –ù–∞–∑–≤–∞–Ω–∏–µ Google –¢–∞–±–ª–∏—Ü—ã
            drive_folder_name: –ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –Ω–∞ Google Drive
            enable_drive: –í–∫–ª—é—á–∏—Ç—å –ª–∏ Google Drive (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é False)
        """
        self.credentials_path = credentials_path
        self.spreadsheet_id = spreadsheet_id
        self.drive_folder_id = drive_folder_id
        self.spreadsheet_name = spreadsheet_name
        self.drive_folder_name = drive_folder_name
        self.enable_drive = enable_drive
        self.drive_folder_name = drive_folder_name
        
        # –û–±–ª–∞—Å—Ç–∏ –¥–æ—Å—Ç—É–ø–∞
        self.scopes = [
            'https://www.googleapis.com/auth/spreadsheets',
            'https://www.googleapis.com/auth/drive'
        ]
        
        self._setup_services()
    
    def _setup_services(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ Google API"""
        try:
            # –°–æ–∑–¥–∞–µ–º —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            credentials = Credentials.from_service_account_file(
                self.credentials_path, 
                scopes=self.scopes
            )
            
            # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º gspread –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Google Sheets
            self.gc = gspread.authorize(credentials)
            logger.info("‚úÖ Google Sheets API –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            
            # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Google Drive API —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω
            if self.enable_drive:
                self.drive_service = build('drive', 'v3', credentials=credentials)
                logger.info("‚úÖ Google Drive API –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                self._ensure_drive_folder_exists()
            else:
                self.drive_service = None
                logger.info("‚ÑπÔ∏è Google Drive –æ—Ç–∫–ª—é—á–µ–Ω")
            
            logger.info("Google Services –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Google Services: {e}")
            raise
    
    def _ensure_drive_folder_exists(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –∏ —Å–æ–∑–¥–∞–µ—Ç –µ—ë –µ—Å–ª–∏ –Ω—É–∂–Ω–æ"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–∞–ø–∫–∞ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID
            if self.drive_folder_id:
                try:
                    file = self.drive_service.files().get(fileId=self.drive_folder_id).execute()
                    if file.get('mimeType') == 'application/vnd.google-apps.folder':
                        logger.info(f"–ü–∞–ø–∫–∞ {self.drive_folder_name} –Ω–∞–π–¥–µ–Ω–∞: {self.drive_folder_id}")
                        return
                except:
                    pass
            
            # –ò—â–µ–º –ø–∞–ø–∫—É –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
            results = self.drive_service.files().list(
                q=f"name='{self.drive_folder_name}' and mimeType='application/vnd.google-apps.folder'",
                spaces='drive'
            ).execute()
            
            folders = results.get('files', [])
            
            if folders:
                # –ü–∞–ø–∫–∞ –Ω–∞–π–¥–µ–Ω–∞, –æ–±–Ω–æ–≤–ª—è–µ–º ID
                self.drive_folder_id = folders[0]['id']
                logger.info(f"–ù–∞–π–¥–µ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –ø–∞–ø–∫–∞ {self.drive_folder_name}: {self.drive_folder_id}")
            else:
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –ø–∞–ø–∫—É
                folder_metadata = {
                    'name': self.drive_folder_name,
                    'mimeType': 'application/vnd.google-apps.folder'
                }
                
                folder = self.drive_service.files().create(
                    body=folder_metadata,
                    fields='id'
                ).execute()
                
                self.drive_folder_id = folder.get('id')
                logger.info(f"–°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –ø–∞–ø–∫–∞ {self.drive_folder_name}: {self.drive_folder_id}")
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –ø–∞–ø–∫–æ–π Google Drive: {e}")
            # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É
    
    async def add_application_to_sheet(self, application_data: Dict[str, Any]) -> bool:
        """
        –î–æ–±–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏ –≤ Google –¢–∞–±–ª–∏—Ü—É
        
        Args:
            application_data: –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –∑–∞—è–≤–∫–∏
            
        Returns:
            bool: True –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ, False –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        """
        try:
            logger.info(f"üìä –ù–∞—á–∏–Ω–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –≤ Google Sheets...")
            logger.info(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {application_data.get('user_id')} (@{application_data.get('username')})")
            
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
            logger.info(f"üìã –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É: {self.spreadsheet_name}")
            spreadsheet = self.gc.open(self.spreadsheet_name)
            
            # –ü–æ–ª—É—á–∞–µ–º –ª–∏—Å—Ç "Applications" –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
            worksheet_name = "Applications"
            try:
                logger.info(f"üîç –ò—â–µ–º –ª–∏—Å—Ç: {worksheet_name}")
                worksheet = spreadsheet.worksheet(worksheet_name)
                logger.info(f"‚úÖ –õ–∏—Å—Ç {worksheet_name} –Ω–∞–π–¥–µ–Ω")
            except gspread.WorksheetNotFound:
                logger.info(f"üìÑ –õ–∏—Å—Ç {worksheet_name} –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π...")
                # –°–æ–∑–¥–∞–µ–º –ª–∏—Å—Ç –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
                worksheet = spreadsheet.add_worksheet(title=worksheet_name, rows=1000, cols=25)
                
                # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø–æ–¥-–æ—Ç–¥–µ–ª–æ–≤
                headers = [
                    'Timestamp', 'User ID', 'Username', 'Full Name', 'University', 
                    'Course', 'Phone', 'Email', 'How Found KBK', 'Previous Department',
                    'Department 1', 'Position 1', 'Subdepartment 1',
                    'Department 2', 'Position 2', 'Subdepartment 2', 
                    'Department 3', 'Position 3', 'Subdepartment 3',
                    'Priorities', 'Experience', 'Motivation', 'Status', 
                    'Resume Local Path', 'Resume Google Drive URL'
                ]
                worksheet.append_row(headers)
                logger.info(f"‚úÖ –õ–∏—Å—Ç {worksheet_name} —Å–æ–∑–¥–∞–Ω —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ (–≤–∫–ª—é—á–∞—è –ø–æ–¥-–æ—Ç–¥–µ–ª—ã)")
            
            # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–∏—Å–∏
            logger.info(f"üìù –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–∏—Å–∏...")
            row_data = [
                application_data.get('timestamp', ''),
                application_data.get('user_id', ''),
                application_data.get('username', ''),
                application_data.get('full_name', ''),
                application_data.get('university', ''),
                application_data.get('course', ''),
                application_data.get('phone', ''),
                application_data.get('email', ''),
                application_data.get('how_found_kbk', ''),
                application_data.get('previous_department', ''),
                application_data.get('department_1', ''),
                application_data.get('position_1', ''),
                application_data.get('subdepartment_1', ''),
                application_data.get('department_2', ''),
                application_data.get('position_2', ''),
                application_data.get('subdepartment_2', ''),
                application_data.get('department_3', ''),
                application_data.get('position_3', ''),
                application_data.get('subdepartment_3', ''),
                application_data.get('priorities', ''),
                application_data.get('experience', ''),
                application_data.get('motivation', ''),
                application_data.get('status', ''),
                application_data.get('resume_local_path', ''),
                application_data.get('resume_google_drive_url', '')
            ]
            
            logger.info(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Google Sheets...")
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –≤ —Ç–∞–±–ª–∏—Ü—É
            worksheet.append_row(row_data)
            
            logger.info(f"üéâ –ó–∞—è–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {application_data.get('user_id')} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ Google Sheets")
            return True
            
        except Exception as e:
            error_msg = str(e)
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –≤ Google Sheets: {e}")
            
            # –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–æ–∫ Google Sheets
            if "quotaExceeded" in error_msg:
                logger.error("üìä –û–®–ò–ë–ö–ê: –ü—Ä–µ–≤—ã—à–µ–Ω—ã –ª–∏–º–∏—Ç—ã Google Sheets API")
                logger.error("üí° –†–ï–®–ï–ù–ò–ï: –ü–æ–¥–æ–∂–¥–∏—Ç–µ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ")
            elif "403" in error_msg:
                if "Forbidden" in error_msg:
                    logger.error("üö´ –û–®–ò–ë–ö–ê: –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ Google Sheets (403 Forbidden)")
                    logger.error("üí° –†–ï–®–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ Service Account –∫ —Ç–∞–±–ª–∏—Ü–µ")
                else:
                    logger.error("üö´ –û–®–ò–ë–ö–ê 403: –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")
            elif "401" in error_msg:
                logger.error("üîê –û–®–ò–ë–ö–ê: –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Google Sheets (401)")
                logger.error("üí° –†–ï–®–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ Service Account")
            elif "404" in error_msg:
                logger.error("üìã –û–®–ò–ë–ö–ê: –¢–∞–±–ª–∏—Ü–∞ Google Sheets –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ (404)")
                logger.error(f"üí° –†–ï–®–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã: {self.spreadsheet_name}")
                logger.error(f"üí° –†–ï–®–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ ID —Ç–∞–±–ª–∏—Ü—ã: {self.spreadsheet_id}")
            elif "500" in error_msg:
                logger.error("üîß –û–®–ò–ë–ö–ê: –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ Google (500)")
                logger.error("üí° –†–ï–®–ï–ù–ò–ï: –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ")
            elif "PERMISSION_DENIED" in error_msg:
                logger.error("üîí –û–®–ò–ë–ö–ê: –ù–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ")
                logger.error("üí° –†–ï–®–ï–ù–ò–ï: –ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ Service Account –¥–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–µ")
            else:
                logger.error(f"‚ùì –ù–ï–ò–ó–í–ï–°–¢–ù–ê–Ø –û–®–ò–ë–ö–ê Google Sheets: {error_msg}")
                
            return False
    
    def upload_file_to_drive(self, local_file_path: str, drive_filename: str) -> Optional[str]:
        """
        –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–∞–π–ª –Ω–∞ Google Drive
        
        Args:
            local_file_path: –ü—É—Ç—å –∫ –ª–æ–∫–∞–ª—å–Ω–æ–º—É —Ñ–∞–π–ª—É
            drive_filename: –ò–º—è —Ñ–∞–π–ª–∞ –Ω–∞ Google Drive
            
        Returns:
            str: –°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –∏–ª–∏ None –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        """
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∫–ª—é—á–µ–Ω –ª–∏ Google Drive
        if not self.enable_drive:
            logger.info("‚ÑπÔ∏è Google Drive –æ—Ç–∫–ª—é—á–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞")
            return None
            
        if not self.drive_service:
            logger.error("‚ùå Google Drive —Å–µ—Ä–≤–∏—Å –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            return None
            
        try:
            logger.info(f"üìÅ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞ {drive_filename} –≤ Google Drive...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
            if not os.path.exists(local_file_path):
                logger.error(f"‚ùå –õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {local_file_path}")
                return None
            
            # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
            file_size = os.path.getsize(local_file_path)
            logger.info(f"üìÑ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size} –±–∞–π—Ç ({file_size / 1024 / 1024:.2f} –ú–ë)")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–∞–ø–∫–∏
            if not self.drive_folder_id:
                logger.error("‚ùå ID –ø–∞–ø–∫–∏ Google Drive –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
                return None
                
            logger.info(f"üìÇ –ó–∞–≥—Ä—É–∑–∫–∞ –≤ –ø–∞–ø–∫—É: {self.drive_folder_name} (ID: {self.drive_folder_id})")
            
            # –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª–∞ –¥–ª—è –ø–∞–ø–∫–∏ "–†–µ–∑—é–º–µ_–ö–ë–ö26"
            file_metadata = {
                'name': drive_filename,
                'parents': [self.drive_folder_id]  # ID –ø–∞–ø–∫–∏ "–†–µ–∑—é–º–µ_–ö–ë–ö26"
            }
            
            logger.info(f"üîÑ –°–æ–∑–¥–∞–µ–º –º–µ–¥–∏–∞ –æ–±—ä–µ–∫—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏...")
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª
            media = MediaFileUpload(local_file_path, resumable=True)
            
            logger.info(f"üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –≤ Google Drive...")
            
            file = self.drive_service.files().create(
                body=file_metadata,
                media_body=media,
                fields='id',
                supportsAllDrives=True
            ).execute()
            
            file_id = file.get('id')
            
            if not file_id:
                logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞")
                return None
                
            logger.info(f"‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω —Å ID: {file_id}")
            
            # –î–µ–ª–∞–µ–º —Ñ–∞–π–ª –¥–æ—Å—Ç—É–ø–Ω—ã–º –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
            logger.info(f"üîì –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É...")
            
            self.drive_service.permissions().create(
                fileId=file_id,
                body={'role': 'reader', 'type': 'anyone'}
            ).execute()
            
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª
            file_url = f"https://drive.google.com/file/d/{file_id}/view"
            
            logger.info(f"üéâ –§–∞–π–ª {drive_filename} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞ Google Drive: {file_url}")
            return file_url
            
        except Exception as e:
            error_msg = str(e)
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –Ω–∞ Google Drive: {e}")
            
            # –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–æ–∫
            if "storageQuotaExceeded" in error_msg:
                logger.error("üíæ –û–®–ò–ë–ö–ê: –ü—Ä–µ–≤—ã—à–µ–Ω–∞ –∫–≤–æ—Ç–∞ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ Google Drive")
                logger.error("üí° –†–ï–®–ï–ù–ò–ï: –û—á–∏—Å—Ç–∏—Ç–µ –º–µ—Å—Ç–æ –Ω–∞ Google Drive –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Shared Drive")
            elif "Service Accounts do not have storage quota" in error_msg:
                logger.error("üîë –û–®–ò–ë–ö–ê: Service Account –Ω–µ –∏–º–µ–µ—Ç –∫–≤–æ—Ç—ã —Ö—Ä–∞–Ω–∏–ª–∏—â–∞")
                logger.error("üí° –†–ï–®–ï–ù–ò–ï 1: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Shared Drive –≤–º–µ—Å—Ç–æ –ª–∏—á–Ω–æ–≥–æ Drive")
                logger.error("üí° –†–ï–®–ï–ù–ò–ï 2: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ OAuth –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ")
                logger.error("üí° –†–ï–®–ï–ù–ò–ï 3: –ó–∞–≥—Ä—É–∂–∞–π—Ç–µ —Ñ–∞–π–ª—ã –≤ –æ–±—â—É—é –ø–∞–ø–∫—É —Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏")
            elif "quotaExceeded" in error_msg:
                logger.error("üìä –û–®–ò–ë–ö–ê: –ü—Ä–µ–≤—ã—à–µ–Ω—ã –ª–∏–º–∏—Ç—ã Google Drive API")
                logger.error("üí° –†–ï–®–ï–ù–ò–ï: –ü–æ–¥–æ–∂–¥–∏—Ç–µ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ")
            elif "403" in error_msg:
                if "Forbidden" in error_msg:
                    logger.error("üö´ –û–®–ò–ë–ö–ê: –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ Google Drive (403 Forbidden)")
                    logger.error("üí° –†–ï–®–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ Service Account")
                else:
                    logger.error("üö´ –û–®–ò–ë–ö–ê 403: –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")
            elif "401" in error_msg:
                logger.error("üîê –û–®–ò–ë–ö–ê: –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Google Drive (401)")
                logger.error("üí° –†–ï–®–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ Service Account")
            elif "404" in error_msg:
                logger.error("üìÅ –û–®–ò–ë–ö–ê: –ü–∞–ø–∫–∞ –Ω–∞ Google Drive –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ (404)")
                logger.error(f"üí° –†–ï–®–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ ID –ø–∞–ø–∫–∏: {self.drive_folder_id}")
            elif "500" in error_msg:
                logger.error("üîß –û–®–ò–ë–ö–ê: –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ Google (500)")
                logger.error("üí° –†–ï–®–ï–ù–ò–ï: –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ")
            else:
                logger.error(f"‚ùì –ù–ï–ò–ó–í–ï–°–¢–ù–ê–Ø –û–®–ò–ë–ö–ê: {error_msg}")
                
            return None
    
    async def create_backup_sheet(self, csv_data: List[List[str]], sheet_name: str) -> bool:
        """
        –°–æ–∑–¥–∞–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –≤ –Ω–æ–≤–æ–º –ª–∏—Å—Ç–µ Google –¢–∞–±–ª–∏—Ü—ã
        
        Args:
            csv_data: –î–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ CSV (—Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤)
            sheet_name: –ù–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ª–∏—Å—Ç–∞
            
        Returns:
            bool: True –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ, False –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        """
        try:
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
            sheet = self.gc.open_by_key(self.spreadsheet_id)
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ª–∏—Å—Ç
            worksheet = sheet.add_worksheet(title=sheet_name, rows=len(csv_data), cols=len(csv_data[0]) if csv_data else 1)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
            if csv_data:
                worksheet.update('A1', csv_data)
            
            logger.info(f"–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞ –≤ –ª–∏—Å—Ç–µ {sheet_name}")
            return True
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏: {e}")
            return False


# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
async def setup_google_services() -> Optional[GoogleServicesManager]:
    """
    –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Google —Å–µ—Ä–≤–∏—Å–æ–≤
    
    Returns:
        GoogleServicesManager –∏–ª–∏ None –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
    """
    try:
        from config.config import load_config
        config = load_config()
        
        if not config.google:
            logger.warning("Google —Å–µ—Ä–≤–∏—Å—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
            return None
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        if not os.path.exists(config.google.credentials_path):
            logger.warning(f"–§–∞–π–ª —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö Google –Ω–µ –Ω–∞–π–¥–µ–Ω: {config.google.credentials_path}")
            return None
        
        return GoogleServicesManager(
            config.google.credentials_path, 
            config.google.spreadsheet_id, 
            config.google.drive_folder_id,
            getattr(config.google, 'spreadsheet_name', '–ó–∞—è–≤–∫–∏ –ö–ë–ö26'),
            getattr(config.google, 'drive_folder_name', '–†–µ–∑—é–º–µ_–ö–ë–ö26')
        )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Google —Å–µ—Ä–≤–∏—Å–æ–≤: {e}")
        return None
