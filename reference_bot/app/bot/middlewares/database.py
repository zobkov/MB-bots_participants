from typing import Callable, Dict, Any, Awaitable
from aiogram import BaseMiddleware
from aiogram.types import TelegramObject, User
import logging

from app.infrastructure.database.database.db import DB

logger = logging.getLogger(__name__)


class DatabaseMiddleware(BaseMiddleware):
    """Middleware –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"""

    async def __call__(
        self,
        handler: Callable[[TelegramObject, Dict[str, Any]], Awaitable[Any]],
        event: TelegramObject,
        data: Dict[str, Any]
    ) -> Any:
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ middleware
        
        Args:
            handler: –°–ª–µ–¥—É—é—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤ —Ü–µ–ø–æ—á–∫–µ
            event: –°–æ–±—ã—Ç–∏–µ Telegram
            data: –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É
            
        Returns:
            –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
        """
        # –ü–æ–ª—É—á–∞–µ–º –ø—É–ª—ã —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π —Å –ë–î –∏–∑ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
        dispatcher = data.get("_dispatcher") or data.get("dispatcher") or data.get("dp")
        
        # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        db_pool = None
        db_applications_pool = None
        bot = None
        config = None
        
        if dispatcher:
            db_pool = dispatcher.get("db")
            db_applications_pool = dispatcher.get("db_applications")
            bot = dispatcher.get("bot")
            config = dispatcher.get("config")
        
        # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–µ, –ø–æ–ø—Ä–æ–±—É–µ–º –≤ —Å–∞–º–∏—Ö –¥–∞–Ω–Ω—ã—Ö
        if not db_pool:
            db_pool = data.get("_db_pool")
            
        if not db_applications_pool:
            db_applications_pool = data.get("_db_applications_pool")
        
        if not bot:
            bot = data.get("bot")
            
        if not config:
            config = data.get("config")
        
        if not db_applications_pool:
            logger.warning("–ü—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π —Å –ë–î –∑–∞—è–≤–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ middleware")
            return await handler(event, data)
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–æ–±—ã—Ç–∏—è
        user: User = data.get("event_from_user")
        
        if user:
            logger.debug(f"üîç DatabaseMiddleware: –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id} (@{user.username})")
            try:
                # –°–æ–∑–¥–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ë–î
                async with db_applications_pool.connection() as applications_connection:
                    
                    logger.debug(f"üíæ –°–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ë–î —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
                    database = DB(applications_connection, applications_connection)
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    logger.debug(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}")
                    user_record = await database.users.get_user_record(user_id=user.id)
                    
                    if not user_record:
                        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        logger.info(f"üë§ –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.id} (@{user.username})")
                        await database.users.add(
                            user_id=user.id,
                            language=user.language_code or "ru",
                        )
                        logger.info(f"‚úÖ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: {user.id}")
                    else:
                        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
                        logger.debug(f"üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}")
                        await database.users.update_alive_status(
                            user_id=user.id, 
                            is_alive=True
                        )
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç –ë–î –≤ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞—Ö
                    data["db"] = database
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ middleware_data –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –≤ –¥–∏–∞–ª–æ–≥–∞—Ö
                    if bot:
                        data["bot"] = bot
                    if config:
                        data["config"] = config
                    
                    logger.debug(f"üéØ –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}")
                    
                    # –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
                    result = await handler(event, data)
                    
                    # –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –æ–±–µ–∏—Ö –ë–î
                    logger.debug(f"üíæ –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ë–î –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}")
                    await applications_connection.commit()
                    
                    logger.debug(f"‚úÖ DatabaseMiddleware: –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id} –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
                    return result
                    
            except Exception as e:
                logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ DatabaseMiddleware –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}: {e}")
                logger.error(f"üìã –¢–∏–ø —Å–æ–±—ã—Ç–∏—è: {type(event).__name__}")
                logger.error(f"üìã –î–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è: {data}")
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫
                return await handler(event, data)
        else:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–¥–∞–µ–º –¥–∞–ª—å—à–µ
            logger.debug("‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–æ–±—ã—Ç–∏–∏, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º DatabaseMiddleware")
            return await handler(event, data)
